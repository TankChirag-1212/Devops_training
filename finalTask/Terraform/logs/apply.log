
Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # module.ec2_controller.aws_instance.webserver[0m will be created
[0m  [32m+[0m[0m resource "aws_instance" "webserver" {
      [32m+[0m[0m ami                                  = "ami-0522ab6e1ddcc7055"
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m associate_public_ip_address          = true
      [32m+[0m[0m availability_zone                    = (known after apply)
      [32m+[0m[0m cpu_core_count                       = (known after apply)
      [32m+[0m[0m cpu_threads_per_core                 = (known after apply)
      [32m+[0m[0m disable_api_stop                     = (known after apply)
      [32m+[0m[0m disable_api_termination              = (known after apply)
      [32m+[0m[0m ebs_optimized                        = (known after apply)
      [32m+[0m[0m get_password_data                    = false
      [32m+[0m[0m host_id                              = (known after apply)
      [32m+[0m[0m host_resource_group_arn              = (known after apply)
      [32m+[0m[0m iam_instance_profile                 = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_initiated_shutdown_behavior = (known after apply)
      [32m+[0m[0m instance_lifecycle                   = (known after apply)
      [32m+[0m[0m instance_state                       = (known after apply)
      [32m+[0m[0m instance_type                        = "t2.medium"
      [32m+[0m[0m ipv6_address_count                   = (known after apply)
      [32m+[0m[0m ipv6_addresses                       = (known after apply)
      [32m+[0m[0m key_name                             = "final-task-chirag-ap-south"
      [32m+[0m[0m monitoring                           = (known after apply)
      [32m+[0m[0m outpost_arn                          = (known after apply)
      [32m+[0m[0m password_data                        = (known after apply)
      [32m+[0m[0m placement_group                      = (known after apply)
      [32m+[0m[0m placement_partition_number           = (known after apply)
      [32m+[0m[0m primary_network_interface_id         = (known after apply)
      [32m+[0m[0m private_dns                          = (known after apply)
      [32m+[0m[0m private_ip                           = (known after apply)
      [32m+[0m[0m public_dns                           = (known after apply)
      [32m+[0m[0m public_ip                            = (known after apply)
      [32m+[0m[0m secondary_private_ips                = (known after apply)
      [32m+[0m[0m security_groups                      = (known after apply)
      [32m+[0m[0m source_dest_check                    = true
      [32m+[0m[0m spot_instance_request_id             = (known after apply)
      [32m+[0m[0m subnet_id                            = (known after apply)
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Name" = "Controller-Node-chirag"
          [32m+[0m[0m "Node" = "Master"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Name" = "Controller-Node-chirag"
          [32m+[0m[0m "Node" = "Master"
        }
      [32m+[0m[0m tenancy                              = (known after apply)
      [32m+[0m[0m user_data                            = (known after apply)
      [32m+[0m[0m user_data_base64                     = (known after apply)
      [32m+[0m[0m user_data_replace_on_change          = false
      [32m+[0m[0m vpc_security_group_ids               = (known after apply)

      [32m+[0m[0m capacity_reservation_specification (known after apply)

      [32m+[0m[0m cpu_options (known after apply)

      [32m+[0m[0m ebs_block_device (known after apply)

      [32m+[0m[0m enclave_options (known after apply)

      [32m+[0m[0m ephemeral_block_device (known after apply)

      [32m+[0m[0m instance_market_options (known after apply)

      [32m+[0m[0m maintenance_options (known after apply)

      [32m+[0m[0m metadata_options (known after apply)

      [32m+[0m[0m network_interface (known after apply)

      [32m+[0m[0m private_dns_name_options (known after apply)

      [32m+[0m[0m root_block_device {
          [32m+[0m[0m delete_on_termination = true
          [32m+[0m[0m device_name           = (known after apply)
          [32m+[0m[0m encrypted             = (known after apply)
          [32m+[0m[0m iops                  = (known after apply)
          [32m+[0m[0m kms_key_id            = (known after apply)
          [32m+[0m[0m tags_all              = (known after apply)
          [32m+[0m[0m throughput            = (known after apply)
          [32m+[0m[0m volume_id             = (known after apply)
          [32m+[0m[0m volume_size           = 20
          [32m+[0m[0m volume_type           = (known after apply)
        }
    }

[1m  # module.ec2_worker[0].aws_instance.webserver[0m will be created
[0m  [32m+[0m[0m resource "aws_instance" "webserver" {
      [32m+[0m[0m ami                                  = "ami-0522ab6e1ddcc7055"
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m associate_public_ip_address          = true
      [32m+[0m[0m availability_zone                    = (known after apply)
      [32m+[0m[0m cpu_core_count                       = (known after apply)
      [32m+[0m[0m cpu_threads_per_core                 = (known after apply)
      [32m+[0m[0m disable_api_stop                     = (known after apply)
      [32m+[0m[0m disable_api_termination              = (known after apply)
      [32m+[0m[0m ebs_optimized                        = (known after apply)
      [32m+[0m[0m get_password_data                    = false
      [32m+[0m[0m host_id                              = (known after apply)
      [32m+[0m[0m host_resource_group_arn              = (known after apply)
      [32m+[0m[0m iam_instance_profile                 = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_initiated_shutdown_behavior = (known after apply)
      [32m+[0m[0m instance_lifecycle                   = (known after apply)
      [32m+[0m[0m instance_state                       = (known after apply)
      [32m+[0m[0m instance_type                        = "t2.micro"
      [32m+[0m[0m ipv6_address_count                   = (known after apply)
      [32m+[0m[0m ipv6_addresses                       = (known after apply)
      [32m+[0m[0m key_name                             = "final-task-chirag-ap-south"
      [32m+[0m[0m monitoring                           = (known after apply)
      [32m+[0m[0m outpost_arn                          = (known after apply)
      [32m+[0m[0m password_data                        = (known after apply)
      [32m+[0m[0m placement_group                      = (known after apply)
      [32m+[0m[0m placement_partition_number           = (known after apply)
      [32m+[0m[0m primary_network_interface_id         = (known after apply)
      [32m+[0m[0m private_dns                          = (known after apply)
      [32m+[0m[0m private_ip                           = (known after apply)
      [32m+[0m[0m public_dns                           = (known after apply)
      [32m+[0m[0m public_ip                            = (known after apply)
      [32m+[0m[0m secondary_private_ips                = (known after apply)
      [32m+[0m[0m security_groups                      = (known after apply)
      [32m+[0m[0m source_dest_check                    = true
      [32m+[0m[0m spot_instance_request_id             = (known after apply)
      [32m+[0m[0m subnet_id                            = (known after apply)
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Name" = "Worker-Node-chirag"
          [32m+[0m[0m "Node" = "Worker"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Name" = "Worker-Node-chirag"
          [32m+[0m[0m "Node" = "Worker"
        }
      [32m+[0m[0m tenancy                              = (known after apply)
      [32m+[0m[0m user_data                            = (known after apply)
      [32m+[0m[0m user_data_base64                     = (known after apply)
      [32m+[0m[0m user_data_replace_on_change          = false
      [32m+[0m[0m vpc_security_group_ids               = (known after apply)

      [32m+[0m[0m capacity_reservation_specification (known after apply)

      [32m+[0m[0m cpu_options (known after apply)

      [32m+[0m[0m ebs_block_device (known after apply)

      [32m+[0m[0m enclave_options (known after apply)

      [32m+[0m[0m ephemeral_block_device (known after apply)

      [32m+[0m[0m instance_market_options (known after apply)

      [32m+[0m[0m maintenance_options (known after apply)

      [32m+[0m[0m metadata_options (known after apply)

      [32m+[0m[0m network_interface (known after apply)

      [32m+[0m[0m private_dns_name_options (known after apply)

      [32m+[0m[0m root_block_device {
          [32m+[0m[0m delete_on_termination = true
          [32m+[0m[0m device_name           = (known after apply)
          [32m+[0m[0m encrypted             = (known after apply)
          [32m+[0m[0m iops                  = (known after apply)
          [32m+[0m[0m kms_key_id            = (known after apply)
          [32m+[0m[0m tags_all              = (known after apply)
          [32m+[0m[0m throughput            = (known after apply)
          [32m+[0m[0m volume_id             = (known after apply)
          [32m+[0m[0m volume_size           = 15
          [32m+[0m[0m volume_type           = (known after apply)
        }
    }

[1m  # module.ec2_worker[1].aws_instance.webserver[0m will be created
[0m  [32m+[0m[0m resource "aws_instance" "webserver" {
      [32m+[0m[0m ami                                  = "ami-0522ab6e1ddcc7055"
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m associate_public_ip_address          = true
      [32m+[0m[0m availability_zone                    = (known after apply)
      [32m+[0m[0m cpu_core_count                       = (known after apply)
      [32m+[0m[0m cpu_threads_per_core                 = (known after apply)
      [32m+[0m[0m disable_api_stop                     = (known after apply)
      [32m+[0m[0m disable_api_termination              = (known after apply)
      [32m+[0m[0m ebs_optimized                        = (known after apply)
      [32m+[0m[0m get_password_data                    = false
      [32m+[0m[0m host_id                              = (known after apply)
      [32m+[0m[0m host_resource_group_arn              = (known after apply)
      [32m+[0m[0m iam_instance_profile                 = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_initiated_shutdown_behavior = (known after apply)
      [32m+[0m[0m instance_lifecycle                   = (known after apply)
      [32m+[0m[0m instance_state                       = (known after apply)
      [32m+[0m[0m instance_type                        = "t2.micro"
      [32m+[0m[0m ipv6_address_count                   = (known after apply)
      [32m+[0m[0m ipv6_addresses                       = (known after apply)
      [32m+[0m[0m key_name                             = "final-task-chirag-ap-south"
      [32m+[0m[0m monitoring                           = (known after apply)
      [32m+[0m[0m outpost_arn                          = (known after apply)
      [32m+[0m[0m password_data                        = (known after apply)
      [32m+[0m[0m placement_group                      = (known after apply)
      [32m+[0m[0m placement_partition_number           = (known after apply)
      [32m+[0m[0m primary_network_interface_id         = (known after apply)
      [32m+[0m[0m private_dns                          = (known after apply)
      [32m+[0m[0m private_ip                           = (known after apply)
      [32m+[0m[0m public_dns                           = (known after apply)
      [32m+[0m[0m public_ip                            = (known after apply)
      [32m+[0m[0m secondary_private_ips                = (known after apply)
      [32m+[0m[0m security_groups                      = (known after apply)
      [32m+[0m[0m source_dest_check                    = true
      [32m+[0m[0m spot_instance_request_id             = (known after apply)
      [32m+[0m[0m subnet_id                            = (known after apply)
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Name" = "Worker-Node-chirag"
          [32m+[0m[0m "Node" = "Worker"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Name" = "Worker-Node-chirag"
          [32m+[0m[0m "Node" = "Worker"
        }
      [32m+[0m[0m tenancy                              = (known after apply)
      [32m+[0m[0m user_data                            = (known after apply)
      [32m+[0m[0m user_data_base64                     = (known after apply)
      [32m+[0m[0m user_data_replace_on_change          = false
      [32m+[0m[0m vpc_security_group_ids               = (known after apply)

      [32m+[0m[0m capacity_reservation_specification (known after apply)

      [32m+[0m[0m cpu_options (known after apply)

      [32m+[0m[0m ebs_block_device (known after apply)

      [32m+[0m[0m enclave_options (known after apply)

      [32m+[0m[0m ephemeral_block_device (known after apply)

      [32m+[0m[0m instance_market_options (known after apply)

      [32m+[0m[0m maintenance_options (known after apply)

      [32m+[0m[0m metadata_options (known after apply)

      [32m+[0m[0m network_interface (known after apply)

      [32m+[0m[0m private_dns_name_options (known after apply)

      [32m+[0m[0m root_block_device {
          [32m+[0m[0m delete_on_termination = true
          [32m+[0m[0m device_name           = (known after apply)
          [32m+[0m[0m encrypted             = (known after apply)
          [32m+[0m[0m iops                  = (known after apply)
          [32m+[0m[0m kms_key_id            = (known after apply)
          [32m+[0m[0m tags_all              = (known after apply)
          [32m+[0m[0m throughput            = (known after apply)
          [32m+[0m[0m volume_id             = (known after apply)
          [32m+[0m[0m volume_size           = 15
          [32m+[0m[0m volume_type           = (known after apply)
        }
    }

[1m  # module.s3.aws_s3_bucket.app_bucket[0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket" "app_bucket" {
      [32m+[0m[0m acceleration_status         = (known after apply)
      [32m+[0m[0m acl                         = (known after apply)
      [32m+[0m[0m arn                         = (known after apply)
      [32m+[0m[0m bucket                      = "fruitables-1.0.0-chirag"
      [32m+[0m[0m bucket_domain_name          = (known after apply)
      [32m+[0m[0m bucket_prefix               = (known after apply)
      [32m+[0m[0m bucket_regional_domain_name = (known after apply)
      [32m+[0m[0m force_destroy               = false
      [32m+[0m[0m hosted_zone_id              = (known after apply)
      [32m+[0m[0m id                          = (known after apply)
      [32m+[0m[0m object_lock_enabled         = (known after apply)
      [32m+[0m[0m policy                      = (known after apply)
      [32m+[0m[0m region                      = (known after apply)
      [32m+[0m[0m request_payer               = (known after apply)
      [32m+[0m[0m tags                        = {
          [32m+[0m[0m "Name" = "fruitables-1.0.0-chirag"
        }
      [32m+[0m[0m tags_all                    = {
          [32m+[0m[0m "Name" = "fruitables-1.0.0-chirag"
        }
      [32m+[0m[0m website_domain              = (known after apply)
      [32m+[0m[0m website_endpoint            = (known after apply)

      [32m+[0m[0m cors_rule (known after apply)

      [32m+[0m[0m grant (known after apply)

      [32m+[0m[0m lifecycle_rule (known after apply)

      [32m+[0m[0m logging (known after apply)

      [32m+[0m[0m object_lock_configuration (known after apply)

      [32m+[0m[0m replication_configuration (known after apply)

      [32m+[0m[0m server_side_encryption_configuration (known after apply)

      [32m+[0m[0m versioning (known after apply)

      [32m+[0m[0m website (known after apply)
    }

[1m  # module.s3.aws_s3_bucket_public_access_block.app_bucket_public_access[0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_public_access_block" "app_bucket_public_access" {
      [32m+[0m[0m block_public_acls       = false
      [32m+[0m[0m block_public_policy     = false
      [32m+[0m[0m bucket                  = (known after apply)
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m ignore_public_acls      = false
      [32m+[0m[0m restrict_public_buckets = false
    }

[1m  # module.s3.aws_s3_bucket_versioning.bucket_versioning[0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_versioning" "bucket_versioning" {
      [32m+[0m[0m bucket = (known after apply)
      [32m+[0m[0m id     = (known after apply)

      [32m+[0m[0m versioning_configuration {
          [32m+[0m[0m mfa_delete = (known after apply)
          [32m+[0m[0m status     = "Enabled"
        }
    }

[1m  # module.security_group.aws_security_group.controller_sg[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "controller_sg" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Managed by Terraform"
      [32m+[0m[0m egress                 = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = (known after apply)
      [32m+[0m[0m name                   = (known after apply)
      [32m+[0m[0m name_prefix            = "Controller-sg-"
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Name" = "Controller-sg-chirag"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Name" = "Controller-sg-chirag"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # module.security_group.aws_security_group.worker_sg[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "worker_sg" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Managed by Terraform"
      [32m+[0m[0m egress                 = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = (known after apply)
      [32m+[0m[0m name                   = (known after apply)
      [32m+[0m[0m name_prefix            = "Worker-sg-"
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Name" = "Worker-sg-chirag"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Name" = "Worker-sg-chirag"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # module.security_group.aws_vpc_security_group_egress_rule.controller_sg_egress[0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_security_group_egress_rule" "controller_sg_egress" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m cidr_ipv4              = "0.0.0.0/0"
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ip_protocol            = "-1"
      [32m+[0m[0m security_group_id      = (known after apply)
      [32m+[0m[0m security_group_rule_id = (known after apply)
      [32m+[0m[0m tags_all               = {}
    }

[1m  # module.security_group.aws_vpc_security_group_egress_rule.worker_sg_egress[0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_security_group_egress_rule" "worker_sg_egress" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m cidr_ipv4              = "0.0.0.0/0"
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ip_protocol            = "-1"
      [32m+[0m[0m security_group_id      = (known after apply)
      [32m+[0m[0m security_group_rule_id = (known after apply)
      [32m+[0m[0m tags_all               = {}
    }

[1m  # module.security_group.aws_vpc_security_group_ingress_rule.controller_sg_ingress[0][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_security_group_ingress_rule" "controller_sg_ingress" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m cidr_ipv4              = "0.0.0.0/0"
      [32m+[0m[0m from_port              = 6443
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ip_protocol            = "tcp"
      [32m+[0m[0m security_group_id      = (known after apply)
      [32m+[0m[0m security_group_rule_id = (known after apply)
      [32m+[0m[0m tags_all               = {}
      [32m+[0m[0m to_port                = 6443
    }

[1m  # module.security_group.aws_vpc_security_group_ingress_rule.controller_sg_ingress[1][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_security_group_ingress_rule" "controller_sg_ingress" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m cidr_ipv4              = "0.0.0.0/0"
      [32m+[0m[0m from_port              = 2379
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ip_protocol            = "tcp"
      [32m+[0m[0m security_group_id      = (known after apply)
      [32m+[0m[0m security_group_rule_id = (known after apply)
      [32m+[0m[0m tags_all               = {}
      [32m+[0m[0m to_port                = 2380
    }

[1m  # module.security_group.aws_vpc_security_group_ingress_rule.controller_sg_ingress[2][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_security_group_ingress_rule" "controller_sg_ingress" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m cidr_ipv4              = "0.0.0.0/0"
      [32m+[0m[0m from_port              = 10250
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ip_protocol            = "tcp"
      [32m+[0m[0m security_group_id      = (known after apply)
      [32m+[0m[0m security_group_rule_id = (known after apply)
      [32m+[0m[0m tags_all               = {}
      [32m+[0m[0m to_port                = 10250
    }

[1m  # module.security_group.aws_vpc_security_group_ingress_rule.controller_sg_ingress[3][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_security_group_ingress_rule" "controller_sg_ingress" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m cidr_ipv4              = "0.0.0.0/0"
      [32m+[0m[0m from_port              = 10257
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ip_protocol            = "tcp"
      [32m+[0m[0m security_group_id      = (known after apply)
      [32m+[0m[0m security_group_rule_id = (known after apply)
      [32m+[0m[0m tags_all               = {}
      [32m+[0m[0m to_port                = 10257
    }

[1m  # module.security_group.aws_vpc_security_group_ingress_rule.controller_sg_ingress[4][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_security_group_ingress_rule" "controller_sg_ingress" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m cidr_ipv4              = "0.0.0.0/0"
      [32m+[0m[0m from_port              = 10259
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ip_protocol            = "tcp"
      [32m+[0m[0m security_group_id      = (known after apply)
      [32m+[0m[0m security_group_rule_id = (known after apply)
      [32m+[0m[0m tags_all               = {}
      [32m+[0m[0m to_port                = 10259
    }

[1m  # module.security_group.aws_vpc_security_group_ingress_rule.controller_sg_ingress[5][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_security_group_ingress_rule" "controller_sg_ingress" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m cidr_ipv4              = "0.0.0.0/0"
      [32m+[0m[0m from_port              = 8080
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ip_protocol            = "tcp"
      [32m+[0m[0m security_group_id      = (known after apply)
      [32m+[0m[0m security_group_rule_id = (known after apply)
      [32m+[0m[0m tags_all               = {}
      [32m+[0m[0m to_port                = 8080
    }

[1m  # module.security_group.aws_vpc_security_group_ingress_rule.controller_sg_ingress[6][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_security_group_ingress_rule" "controller_sg_ingress" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m cidr_ipv4              = "0.0.0.0/0"
      [32m+[0m[0m from_port              = 22
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ip_protocol            = "tcp"
      [32m+[0m[0m security_group_id      = (known after apply)
      [32m+[0m[0m security_group_rule_id = (known after apply)
      [32m+[0m[0m tags_all               = {}
      [32m+[0m[0m to_port                = 22
    }

[1m  # module.security_group.aws_vpc_security_group_ingress_rule.controller_sg_ingress[7][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_security_group_ingress_rule" "controller_sg_ingress" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m cidr_ipv4              = "0.0.0.0/0"
      [32m+[0m[0m from_port              = 443
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ip_protocol            = "tcp"
      [32m+[0m[0m security_group_id      = (known after apply)
      [32m+[0m[0m security_group_rule_id = (known after apply)
      [32m+[0m[0m tags_all               = {}
      [32m+[0m[0m to_port                = 443
    }

[1m  # module.security_group.aws_vpc_security_group_ingress_rule.controller_sg_ingress[8][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_security_group_ingress_rule" "controller_sg_ingress" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m cidr_ipv4              = "0.0.0.0/0"
      [32m+[0m[0m from_port              = 80
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ip_protocol            = "tcp"
      [32m+[0m[0m security_group_id      = (known after apply)
      [32m+[0m[0m security_group_rule_id = (known after apply)
      [32m+[0m[0m tags_all               = {}
      [32m+[0m[0m to_port                = 80
    }

[1m  # module.security_group.aws_vpc_security_group_ingress_rule.worker_sg_ingress[0][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_security_group_ingress_rule" "worker_sg_ingress" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m cidr_ipv4              = "0.0.0.0/0"
      [32m+[0m[0m from_port              = 10250
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ip_protocol            = "tcp"
      [32m+[0m[0m security_group_id      = (known after apply)
      [32m+[0m[0m security_group_rule_id = (known after apply)
      [32m+[0m[0m tags_all               = {}
      [32m+[0m[0m to_port                = 10250
    }

[1m  # module.security_group.aws_vpc_security_group_ingress_rule.worker_sg_ingress[1][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_security_group_ingress_rule" "worker_sg_ingress" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m cidr_ipv4              = "0.0.0.0/0"
      [32m+[0m[0m from_port              = 30000
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ip_protocol            = "tcp"
      [32m+[0m[0m security_group_id      = (known after apply)
      [32m+[0m[0m security_group_rule_id = (known after apply)
      [32m+[0m[0m tags_all               = {}
      [32m+[0m[0m to_port                = 32767
    }

[1m  # module.security_group.aws_vpc_security_group_ingress_rule.worker_sg_ingress[2][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_security_group_ingress_rule" "worker_sg_ingress" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m cidr_ipv4              = "0.0.0.0/0"
      [32m+[0m[0m from_port              = 22
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ip_protocol            = "tcp"
      [32m+[0m[0m security_group_id      = (known after apply)
      [32m+[0m[0m security_group_rule_id = (known after apply)
      [32m+[0m[0m tags_all               = {}
      [32m+[0m[0m to_port                = 22
    }

[1m  # module.security_group.aws_vpc_security_group_ingress_rule.worker_sg_ingress[3][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_security_group_ingress_rule" "worker_sg_ingress" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m cidr_ipv4              = "0.0.0.0/0"
      [32m+[0m[0m from_port              = 443
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ip_protocol            = "tcp"
      [32m+[0m[0m security_group_id      = (known after apply)
      [32m+[0m[0m security_group_rule_id = (known after apply)
      [32m+[0m[0m tags_all               = {}
      [32m+[0m[0m to_port                = 443
    }

[1m  # module.security_group.aws_vpc_security_group_ingress_rule.worker_sg_ingress[4][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_security_group_ingress_rule" "worker_sg_ingress" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m cidr_ipv4              = "0.0.0.0/0"
      [32m+[0m[0m from_port              = 80
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ip_protocol            = "tcp"
      [32m+[0m[0m security_group_id      = (known after apply)
      [32m+[0m[0m security_group_rule_id = (known after apply)
      [32m+[0m[0m tags_all               = {}
      [32m+[0m[0m to_port                = 80
    }

[1m  # module.vpc.aws_internet_gateway.my_igw[0m will be created
[0m  [32m+[0m[0m resource "aws_internet_gateway" "my_igw" {
      [32m+[0m[0m arn      = (known after apply)
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m owner_id = (known after apply)
      [32m+[0m[0m tags     = {
          [32m+[0m[0m "Name" = "MyIGW-chirag"
        }
      [32m+[0m[0m tags_all = {
          [32m+[0m[0m "Name" = "MyIGW-chirag"
        }
      [32m+[0m[0m vpc_id   = (known after apply)
    }

[1m  # module.vpc.aws_route_table.public_rt[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "public_rt" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m route            = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_block                 = "0.0.0.0/0"
              [32m+[0m[0m gateway_id                 = (known after apply)
                [90m# (11 unchanged attributes hidden)[0m[0m
            },
        ]
      [32m+[0m[0m tags             = {
          [32m+[0m[0m "Name" = "Pub-RT-chirag"
        }
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "Name" = "Pub-RT-chirag"
        }
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.vpc.aws_route_table_association.public_rt_association[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "public_rt_association" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc.aws_subnet.public_subnet[0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "public_subnet" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "ap-south-1a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.1.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = true
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name" = "pub-sub-chirag"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name" = "pub-sub-chirag"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc.aws_vpc.my_vpc[0m will be created
[0m  [32m+[0m[0m resource "aws_vpc" "my_vpc" {
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m cidr_block                           = "10.0.0.0/16"
      [32m+[0m[0m default_network_acl_id               = (known after apply)
      [32m+[0m[0m default_route_table_id               = (known after apply)
      [32m+[0m[0m default_security_group_id            = (known after apply)
      [32m+[0m[0m dhcp_options_id                      = (known after apply)
      [32m+[0m[0m enable_dns_hostnames                 = (known after apply)
      [32m+[0m[0m enable_dns_support                   = true
      [32m+[0m[0m enable_network_address_usage_metrics = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_tenancy                     = "default"
      [32m+[0m[0m ipv6_association_id                  = (known after apply)
      [32m+[0m[0m ipv6_cidr_block                      = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_network_border_group = (known after apply)
      [32m+[0m[0m main_route_table_id                  = (known after apply)
      [32m+[0m[0m owner_id                             = (known after apply)
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Name" = "MyVPC-chirag"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Name" = "MyVPC-chirag"
        }
    }

[1mPlan:[0m 29 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m ec2_controller_instance_ip = (known after apply)
  [32m+[0m[0m ec2_worker_instance_ip     = [
      [32m+[0m[0m (known after apply),
      [32m+[0m[0m (known after apply),
    ]
  [32m+[0m[0m s3_bucket_arn              = (known after apply)
[0m[1m
Do you want to perform these actions?[0m
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  [1mEnter a value:[0m [0m
[0m[1mmodule.vpc.aws_vpc.my_vpc: Creating...[0m[0m
[0m[1mmodule.s3.aws_s3_bucket.app_bucket: Creating...[0m[0m
[0m[1mmodule.vpc.aws_vpc.my_vpc: Creation complete after 3s [id=vpc-02e5003cab44b8494][0m
[0m[1mmodule.vpc.aws_internet_gateway.my_igw: Creating...[0m[0m
[0m[1mmodule.vpc.aws_subnet.public_subnet: Creating...[0m[0m
[0m[1mmodule.security_group.aws_security_group.worker_sg: Creating...[0m[0m
[0m[1mmodule.security_group.aws_security_group.controller_sg: Creating...[0m[0m
[0m[1mmodule.vpc.aws_internet_gateway.my_igw: Creation complete after 2s [id=igw-0ea9ef54738eb5271][0m
[0m[1mmodule.vpc.aws_route_table.public_rt: Creating...[0m[0m
[0m[1mmodule.s3.aws_s3_bucket.app_bucket: Creation complete after 7s [id=fruitables-1.0.0-chirag][0m
[0m[1mmodule.s3.aws_s3_bucket_public_access_block.app_bucket_public_access: Creating...[0m[0m
[0m[1mmodule.s3.aws_s3_bucket_versioning.bucket_versioning: Creating...[0m[0m
[0m[1mmodule.security_group.aws_security_group.worker_sg: Creation complete after 4s [id=sg-0261752fc8d05c772][0m
[0m[1mmodule.security_group.aws_vpc_security_group_egress_rule.worker_sg_egress: Creating...[0m[0m
[0m[1mmodule.security_group.aws_vpc_security_group_ingress_rule.worker_sg_ingress[1]: Creating...[0m[0m
[0m[1mmodule.security_group.aws_vpc_security_group_ingress_rule.worker_sg_ingress[2]: Creating...[0m[0m
[0m[1mmodule.security_group.aws_vpc_security_group_ingress_rule.worker_sg_ingress[4]: Creating...[0m[0m
[0m[1mmodule.security_group.aws_vpc_security_group_ingress_rule.worker_sg_ingress[0]: Creating...[0m[0m
[0m[1mmodule.security_group.aws_vpc_security_group_ingress_rule.worker_sg_ingress[3]: Creating...[0m[0m
[0m[1mmodule.security_group.aws_security_group.controller_sg: Creation complete after 4s [id=sg-05ec1a8080806756b][0m
[0m[1mmodule.security_group.aws_vpc_security_group_egress_rule.controller_sg_egress: Creating...[0m[0m
[0m[1mmodule.vpc.aws_route_table.public_rt: Creation complete after 2s [id=rtb-0f862865ba2bce9ba][0m
[0m[1mmodule.security_group.aws_vpc_security_group_ingress_rule.controller_sg_ingress[5]: Creating...[0m[0m
[0m[1mmodule.security_group.aws_vpc_security_group_egress_rule.worker_sg_egress: Creation complete after 1s [id=sgr-054931d90850438b8][0m
[0m[1mmodule.security_group.aws_vpc_security_group_ingress_rule.controller_sg_ingress[4]: Creating...[0m[0m
[0m[1mmodule.security_group.aws_vpc_security_group_ingress_rule.worker_sg_ingress[2]: Creation complete after 1s [id=sgr-08a5e720774e8fa19][0m
[0m[1mmodule.security_group.aws_vpc_security_group_ingress_rule.controller_sg_ingress[1]: Creating...[0m[0m
[0m[1mmodule.security_group.aws_vpc_security_group_ingress_rule.worker_sg_ingress[1]: Creation complete after 1s [id=sgr-0ec1fdfbe02bedc9b][0m
[0m[1mmodule.security_group.aws_vpc_security_group_ingress_rule.controller_sg_ingress[3]: Creating...[0m[0m
[0m[1mmodule.security_group.aws_vpc_security_group_ingress_rule.worker_sg_ingress[0]: Creation complete after 1s [id=sgr-00cd35f53770b2625][0m
[0m[1mmodule.security_group.aws_vpc_security_group_ingress_rule.controller_sg_ingress[2]: Creating...[0m[0m
[0m[1mmodule.security_group.aws_vpc_security_group_ingress_rule.worker_sg_ingress[4]: Creation complete after 1s [id=sgr-0bdd60b81ef56f5f5][0m
[0m[1mmodule.security_group.aws_vpc_security_group_ingress_rule.controller_sg_ingress[8]: Creating...[0m[0m
[0m[1mmodule.s3.aws_s3_bucket_public_access_block.app_bucket_public_access: Creation complete after 1s [id=fruitables-1.0.0-chirag][0m
[0m[1mmodule.security_group.aws_vpc_security_group_ingress_rule.controller_sg_ingress[7]: Creating...[0m[0m
[0m[1mmodule.security_group.aws_vpc_security_group_ingress_rule.worker_sg_ingress[3]: Creation complete after 1s [id=sgr-0843100184fe7b18f][0m
[0m[1mmodule.security_group.aws_vpc_security_group_ingress_rule.controller_sg_ingress[6]: Creating...[0m[0m
[0m[1mmodule.security_group.aws_vpc_security_group_ingress_rule.controller_sg_ingress[5]: Creation complete after 1s [id=sgr-0bff8266b4050dcd1][0m
[0m[1mmodule.security_group.aws_vpc_security_group_ingress_rule.controller_sg_ingress[0]: Creating...[0m[0m
[0m[1mmodule.security_group.aws_vpc_security_group_egress_rule.controller_sg_egress: Creation complete after 1s [id=sgr-03fb51f1eb3158fc3][0m
[0m[1mmodule.security_group.aws_vpc_security_group_ingress_rule.controller_sg_ingress[4]: Creation complete after 0s [id=sgr-0207eefdb72ec7256][0m
[0m[1mmodule.security_group.aws_vpc_security_group_ingress_rule.controller_sg_ingress[1]: Creation complete after 0s [id=sgr-0ef2d2acf4b9bbcfd][0m
[0m[1mmodule.security_group.aws_vpc_security_group_ingress_rule.controller_sg_ingress[3]: Creation complete after 0s [id=sgr-0f7057547a7326817][0m
[0m[1mmodule.security_group.aws_vpc_security_group_ingress_rule.controller_sg_ingress[8]: Creation complete after 0s [id=sgr-0410e1c3c8a366bbe][0m
[0m[1mmodule.security_group.aws_vpc_security_group_ingress_rule.controller_sg_ingress[2]: Creation complete after 1s [id=sgr-0ee90e2d56d467a48][0m
[0m[1mmodule.security_group.aws_vpc_security_group_ingress_rule.controller_sg_ingress[7]: Creation complete after 1s [id=sgr-09ed97d50c7eb530e][0m
[0m[1mmodule.security_group.aws_vpc_security_group_ingress_rule.controller_sg_ingress[6]: Creation complete after 1s [id=sgr-077096e2da1d32752][0m
[0m[1mmodule.security_group.aws_vpc_security_group_ingress_rule.controller_sg_ingress[0]: Creation complete after 1s [id=sgr-078193b1ed111e936][0m
[0m[1mmodule.s3.aws_s3_bucket_versioning.bucket_versioning: Creation complete after 3s [id=fruitables-1.0.0-chirag][0m

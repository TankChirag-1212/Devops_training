---
# kubeadm initiation in master node
- name: Initialize Kubernetes master node with kubeadm
  ansible.builtin.command:
    cmd: kubeadm init
  register: kubeadm_output

- name: Create .kube directory for regular user
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.kube"
    state: directory
    mode: '0755'

- name: Copy Kubernetes admin.conf to user's kube config
  ansible.builtin.copy:
    src: /etc/kubernetes/admin.conf
    dest: "{{ ansible_env.HOME }}/.kube/config"
    remote_src: yes
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'

- name: Deploy Calico network plugin
  ansible.builtin.command:
    cmd: kubectl apply -f {{ calico_url }}
  environment:
    KUBECONFIG: "{{ ansible_env.HOME }}/.kube/config"

- name: Get kubeadm join command
  ansible.builtin.command:
    cmd: kubeadm token create --print-join-command
  register: join_command
  
- name: Save join command to a fact
  ansible.builtin.set_fact:
    kubeadm_join_cmd: "{{ join_command.stdout }}"
  
- name: Display kubeadm join command
  ansible.builtin.debug:
    msg: "{{ kubeadm_join_cmd }}"


# installation of helm chart in master node 

- name: Download Helm using curl
  command: curl -L {{ helm_package_url }} -o /tmp/helm.tar.gz

- name: Extract Helm binary
  unarchive:
    src: "/tmp/helm.tar.gz"
    dest: "/tmp"
    remote_src: yes

- name: Move Helm binary to /usr/local/bin
  copy:
    src: "/tmp/linux-amd64/helm" 
    dest: "/usr/local/bin/helm"
    mode: '0755'
    remote_src: yes

- name: Verify Helm installation
  command: helm version
  register: helm_version_output
  changed_when: false

- name: Add Helm repository
  shell: "helm repo add myrepo {{ helm_chart_repo }}"
  register: helm_repo_add_output
  changed_when: "'already exists' not in helm_repo_add_output.stderr"

- name: Update Helm repositories
  command: helm repo update


# Installation of Jenkins in master node

- name: Install Java (required for Jenkins)
  ansible.builtin.package:
    name: openjdk-11-jdk
    state: present

- name: Download Jenkins GPG key using curl
  ansible.builtin.command:
    cmd: >
      curl -fsSL {{ jenkins_key_url }} -o /usr/share/keyrings/jenkins-keyring.asc
  args:
    creates: /usr/share/keyrings/jenkins-keyring.asc

- name: Add Jenkins repository
  ansible.builtin.apt_repository:
    repo: "deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] https://pkg.jenkins.io/debian-stable binary/"
    state: present
    filename: "jenkins"

- name: Update apt cache
  ansible.builtin.apt:
    update_cache: yes

- name: Install Jenkins
  ansible.builtin.apt:
    name: jenkins
    state: present

- name: Start Jenkins service
  ansible.builtin.systemd:
    name: jenkins
    enabled: yes
    state: started

- name: Wait for Jenkins to start
  ansible.builtin.wait_for:
    port: 8080
    delay: 30
    state: started

- name: Get Jenkins initial admin password
  ansible.builtin.command: cat /var/lib/jenkins/secrets/initialAdminPassword
  register: jenkins_admin_password
  changed_when: false

- name: Display Jenkins initial admin password
  ansible.builtin.debug:
    msg: "Jenkins initial admin password: {{ jenkins_admin_password.stdout }}"
